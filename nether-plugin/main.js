/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var a=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var g=(r,i)=>{for(var e in i)a(r,e,{get:i[e],enumerable:!0})},p=(r,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of u(i))!h.call(r,n)&&n!==e&&a(r,n,{get:()=>i[n],enumerable:!(t=l(i,n))||t.enumerable});return r};var d=r=>p(a({},"__esModule",{value:!0}),r);var w={};g(w,{default:()=>o});module.exports=d(w);var s=require("obsidian"),y={serverUrl:"",apiKey:""},o=class extends s.Plugin{async onload(){console.log("Loading NetherPlugin..."),await this.loadSettings(),this.addSettingTab(new c(this.app,this))}onunload(){console.log("Unloading NetherPlugin...")}async loadSettings(){let e=await this.loadData();this.settings=Object.assign({},y,e)}async saveSettings(){await this.saveData(this.settings)}async getCurrentNoteContent(){let e=this.app.workspace.getActiveFile();if(!e)return{file:null,content:null};let t=await this.app.vault.read(e);return{file:e,content:t}}async postDocument(){let{file:e,content:t}=await this.getCurrentNoteContent();if(!e||t===null){new s.Notice("No active note found.");return}try{let n=await fetch(this.settings.serverUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.settings.apiKey}`},body:JSON.stringify({content:t})});if(!n.ok)throw new Error(`Server returned status ${n.status}`);new s.Notice("Document posted successfully.")}catch(n){console.error(n),new s.Notice("Failed to post document.")}}async retrieveDocument(){let{file:e}=await this.getCurrentNoteContent();if(!e){new s.Notice("No active note found.");return}try{let t=await fetch(this.settings.serverUrl,{method:"GET",headers:{Authorization:`Bearer ${this.settings.apiKey}`}});if(!t.ok)throw new Error(`Server returned status ${t.status}`);let n=await t.json();if(!n||typeof n.content!="string")throw new Error('No "content" field in JSON.');await this.app.vault.modify(e,n.content),new s.Notice("Document retrieved and updated.")}catch(t){console.error(t),new s.Notice("Failed to retrieve document.")}}},c=class extends s.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"My Sync Plugin Settings"}),new s.Setting(e).setName("Urbit URL").setDesc("The URL of your Urbit app (ends in /apps/nether).").addText(t=>t.setPlaceholder("https://sampel-palnet.startram.io/apps/nether").setValue(this.plugin.settings.serverUrl).onChange(async n=>{this.plugin.settings.serverUrl=n,await this.plugin.saveSettings()})),new s.Setting(e).setName("API Key").setDesc("Authentication key for your Urbit app.").addText(t=>t.setPlaceholder("Your secret key").setValue(this.plugin.settings.apiKey).onChange(async n=>{this.plugin.settings.apiKey=n,await this.plugin.saveSettings()})),new s.Setting(e).setName("Post Document").setDesc("Send the current note\u2019s content to your Urbit.").addButton(t=>{t.setButtonText("Post"),t.onClick(async()=>{await this.plugin.postDocument()})}),new s.Setting(e).setName("Retrieve Document").setDesc("Fetch the document from your Urbit and overwrite the current note.").addButton(t=>{t.setButtonText("Retrieve"),t.onClick(async()=>{await this.plugin.retrieveDocument()})})}};
