/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var u=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var y=(o,i)=>{for(var t in i)u(o,t,{get:i[t],enumerable:!0})},w=(o,i,t,e)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of d(i))!g.call(o,s)&&s!==t&&u(o,s,{get:()=>i[s],enumerable:!(e=p(i,s))||e.enumerable});return o};var f=o=>w(u({},"__esModule",{value:!0}),o);var v={};y(v,{default:()=>l});module.exports=f(v);var n=require("obsidian"),m={serverUrl:"",apiKey:""},l=class extends n.Plugin{async onload(){console.log("Loading NetherPlugin..."),await this.loadSettings(),this.addSettingTab(new h(this.app,this))}onunload(){console.log("Unloading NetherPlugin...")}async loadSettings(){let t=await this.loadData();this.settings=Object.assign({},m,t)}async saveSettings(){await this.saveData(this.settings)}async getCurrentNoteContent(){let t=this.app.workspace.getActiveFile();if(!t)return{file:null,content:null};let e=await this.app.vault.read(t);return{file:t,content:e}}async postDocument(){let{file:t,content:e}=await this.getCurrentNoteContent();if(!t||e===null){new n.Notice("No active note found.");return}let s=t.basename;try{let a=await fetch(this.settings.serverUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:this.settings.apiKey},body:JSON.stringify({title:s,content:e})});if(!a.ok)throw new Error(`Server returned status ${a.status}`);new n.Notice("Document posted successfully.")}catch(a){console.error(a),new n.Notice("Failed to post document.")}}async retrieveDocument(){let{file:t}=await this.getCurrentNoteContent();if(!t){new n.Notice("No active note found.");return}let e=t.basename,s=encodeURIComponent(e);try{let a=`${this.settings.serverUrl}/file/${s}`,c=await fetch(a,{method:"GET",headers:{Authorization:this.settings.apiKey}});if(!c.ok)throw new Error(`Server returned status ${c.status}`);let r=await c.json();if(!r||typeof r.content!="string"||typeof r.title!="string")throw new Error('Response JSON did not have "title" and "content" fields.');await this.app.vault.modify(t,r.content),new n.Notice(`Document retrieved for "${r.title}" and updated.`)}catch(a){console.error(a),new n.Notice("Failed to retrieve document.")}}},h=class extends n.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Nether Plugin Settings"}),new n.Setting(t).setName("Urbit URL").setDesc("The URL of your Urbit app (ends in /apps/nether).").addText(e=>e.setPlaceholder("https://sampel-palnet.startram.io/apps/nether").setValue(this.plugin.settings.serverUrl).onChange(async s=>{this.plugin.settings.serverUrl=s,await this.plugin.saveSettings()})),new n.Setting(t).setName("Key").setDesc("Secet key from your Urbit app").addText(e=>e.setPlaceholder("Your secret key").setValue(this.plugin.settings.apiKey).onChange(async s=>{this.plugin.settings.apiKey=s,await this.plugin.saveSettings()})),new n.Setting(t).setName("Post Document").setDesc("POST the current note\u2019s title/content to your ship").addButton(e=>{e.setButtonText("Post"),e.onClick(async()=>{await this.plugin.postDocument()})}),new n.Setting(t).setName("Retrieve Document").setDesc("GET the document from your ship and overwrite the current note.").addButton(e=>{e.setButtonText("Retrieve"),e.onClick(async()=>{await this.plugin.retrieveDocument()})})}};
